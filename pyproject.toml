[project]
name = "mcp-cldkctl"
version = "0.2.9"
description = "MCP server for Cloudeka cldkctl CLI integration with automatic environment fallback (Testing Version)"
authors = [
    { name = "Cloudeka MCP Team", email = "support@cloudeka.id" }
]
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["mcp", "cloudeka", "cldkctl", "kubernetes", "cloud", "cli", "testing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
dependencies = [
    "mcp>=1.0.0",
    "requests>=2.25.0",
    "anyio>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.991",
]

[project.urls]
Homepage = "https://github.com/cloudeka/mcp-cldkctl"
Documentation = "https://github.com/cloudeka/mcp-cldkctl#readme"
Repository = "https://github.com/cloudeka/mcp-cldkctl"
Issues = "https://github.com/cloudeka/mcp-cldkctl/issues"

[project.scripts]
mcp-cldkctl = "mcp_cldkctl.__main__:cli_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mcp_cldkctl"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_cldkctl"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mcp.*",
    "anyio.*",
]
ignore_missing_imports = true 